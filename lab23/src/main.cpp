/**
 * @mainpage
 * # Індивідуальне завдання
 * @brief Зрозробити функцію, яка реалізує вставку в рядок “s” другий рядок “s2” в “i”-у позицію рядка “s”;
 * розробити функцію видалення з рядка “s” усіх символів з індексами в заданому діапазоні;
 * за допомогою функцій memcpy, memset створити функції додання та видалення елементів з динамічного масиву вашої прикладної області;
 * додати модульні тести, що демонструють коректність розроблених функцій.
 * реалізувати сортування вмісту списку за одним з критеріїв. При цьому обов’язково забеспечити, щоб обмін місцями об’єктів здійснювався шляхом обміну їх покажчиків.
 * @author Belchynska K.
 * @date 17-march-2021
 * @version 1.0
 */

#include "list.h"
/**
 * @file main.c
 * @brief Головний файл з викликом функцій,
 * виділенням пам'яті для динамічних масивів та заданням вхідного тексту.
 *
 *
 * @author Belchynska K.
 * @date 17-march-2021
 * @version 1.0
 */

/**
 * Головна функція.
 *
 * Послідовність дій:
 * - виклик функції для вставки одного масиву в інший
 * - виклик функції для видалення ділянки масиву
 * - виділення пам'яті для структури інструментів
 * - зчитування інформації з файлу
 * - виклик функції для сортування інструментів за роком випуску
 * - виклик функції для виведеня на екран найстаршої скрипки фірми Yamaha
 * - виклик функції для запису результату у файл
 * - виклик функції для запису результату у бінарний файл
 * - виклик функції для видалення елементу з файлу
 * - виклик функції для копіювання елементу структури у файл
 * - звільнення пам'яті для структури інструментів
 *
 * @return 0 при успішному завершенні програми
 */
int main() {

    List * list = new List();
    Instrument instrument("Classic", "Yamaha", 1805, 0.5f, Bow(300, PERNAMBUCO));
    list->addInstrument(instrument);
    Instrument instrument2("Acoustic", "Stenor", 1985, 1.5f, Bow(100, FIBERGLASS));
    list->addInstrument(instrument2);
    Instrument instrument3("Classic", "Mendini", 2000, 0.3f, Bow(250, BT));
    list->addInstrument(instrument3);
    list->showInstrument();
    //instrument = list->getInstrument(1);
    list->removeInstrument(1);
    list->showInstrument();
    delete list;

    return 0;
}
